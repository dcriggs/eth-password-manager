{
  "address": "0x90b8Bbe202Bc7ae3ee4B4FD64631E5bA54EAa3cB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PasswordDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PasswordDetailsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PasswordShared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PasswordStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "SharedPasswordRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "deletePassword",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSharedPasswordsReceived",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedDataHash",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sharedBy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sharedWith",
              "type": "address"
            }
          ],
          "internalType": "struct ShareablePasswordManager.SharedPasswordData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSharedPasswordsSent",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedDataHash",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sharedBy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sharedWith",
              "type": "address"
            }
          ],
          "internalType": "struct ShareablePasswordManager.SharedPasswordData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPasswords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedDataHash",
              "type": "string"
            }
          ],
          "internalType": "struct UserPasswordManager.PasswordData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "getSharedPasswordsReceived",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedDataHash",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sharedBy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sharedWith",
              "type": "address"
            }
          ],
          "internalType": "struct ShareablePasswordManager.SharedPasswordData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "getSharedPasswordsSent",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedDataHash",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sharedBy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sharedWith",
              "type": "address"
            }
          ],
          "internalType": "struct ShareablePasswordManager.SharedPasswordData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserPublicKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isUserRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedDataHash",
          "type": "string"
        }
      ],
      "name": "revokeSharedPassword",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedDataHash",
          "type": "string"
        }
      ],
      "name": "sharePassword",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedDataHash",
          "type": "string"
        }
      ],
      "name": "storePassword",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedDataHash",
          "type": "string"
        }
      ],
      "name": "updatePasswordDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x097a92db26e4c981c6339aa3e8358c031565dc1e14c0bc557bec2149c8856219",
  "receipt": {
    "to": null,
    "from": "0x28219CD7e0E840f6e9554420f8bf25fBD05bbC28",
    "contractAddress": "0x90b8Bbe202Bc7ae3ee4B4FD64631E5bA54EAa3cB",
    "transactionIndex": 24,
    "gasUsed": "2206924",
    "logsBloom": "0x
    "blockHash": "0xb2fa1d2df2076fdd2d71bb57c440b2b88a835dcde5ec29cb44b3ec2398424bc4",
    "transactionHash": "0x097a92db26e4c981c6339aa3e8358c031565dc1e14c0bc557bec2149c8856219",
    "logs": [],
    "blockNumber": 6791139,
    "cumulativeGasUsed": "13219865",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x28219CD7e0E840f6e9554420f8bf25fBD05bbC28"
  ],
  "numDeployments": 1,
  "solcInputHash": "42f0a115e241649890973126c2a533f2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PasswordDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PasswordDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PasswordShared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PasswordStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SharedPasswordRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"deletePassword\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSharedPasswordsReceived\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sharedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sharedWith\",\"type\":\"address\"}],\"internalType\":\"struct ShareablePasswordManager.SharedPasswordData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSharedPasswordsSent\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sharedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sharedWith\",\"type\":\"address\"}],\"internalType\":\"struct ShareablePasswordManager.SharedPasswordData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPasswords\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"}],\"internalType\":\"struct UserPasswordManager.PasswordData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getSharedPasswordsReceived\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sharedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sharedWith\",\"type\":\"address\"}],\"internalType\":\"struct ShareablePasswordManager.SharedPasswordData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"getSharedPasswordsSent\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sharedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sharedWith\",\"type\":\"address\"}],\"internalType\":\"struct ShareablePasswordManager.SharedPasswordData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserPublicKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"}],\"name\":\"revokeSharedPassword\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"}],\"name\":\"sharePassword\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"}],\"name\":\"storePassword\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedDataHash\",\"type\":\"string\"}],\"name\":\"updatePasswordDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ShareablePasswordManager.sol\":\"ShareablePasswordManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ShareablePasswordManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./UserPasswordManager.sol\\\";\\r\\n\\r\\ncontract ShareablePasswordManager is UserPasswordManager {\\r\\n\\tstruct SharedPasswordData {\\r\\n\\t\\tstring name;\\r\\n\\t\\tstring encryptedDataHash;\\r\\n\\t\\taddress sharedBy;\\r\\n\\t\\taddress sharedWith;\\r\\n\\t}\\r\\n\\r\\n\\t// Mappings to store shared passwords for each user\\r\\n\\tmapping(address => address[]) private recipients;\\r\\n\\tmapping(address => address[]) private senders;\\r\\n\\tmapping(address => uint256) private sentPasswordCount;\\r\\n\\tmapping(address => uint256) private receivedPasswordCount;\\r\\n\\r\\n\\t// Mapping to track which passwords a user has shared with others\\r\\n\\tmapping(address => mapping(address => SharedPasswordData[]))\\r\\n\\t\\tprivate sharedPasswords;\\r\\n\\r\\n\\t// Event emitted when a password is shared\\r\\n\\tevent PasswordShared(address indexed sender, address indexed recipient);\\r\\n\\r\\n\\t// Event emitted when a shared password is revoked\\r\\n\\tevent SharedPasswordRevoked(\\r\\n\\t\\taddress indexed sender,\\r\\n\\t\\taddress indexed recipient\\r\\n\\t);\\r\\n\\r\\n\\tconstructor(address _owner) UserPasswordManager(_owner) {}\\r\\n\\r\\n\\t// Function to share a password with another registered user\\r\\n\\tfunction sharePassword(\\r\\n\\t\\taddress recipient,\\r\\n\\t\\tstring memory name,\\r\\n\\t\\tstring memory encryptedDataHash\\r\\n\\t) external onlyRegistered {\\r\\n\\t\\t// Ensure the recipient is a registered user\\r\\n\\t\\trequire(isUserRegistered(recipient), \\\"Recipient is not registered.\\\");\\r\\n\\t\\trequire(recipient != msg.sender, \\\"Cannot share with same address.\\\");\\r\\n\\r\\n\\t\\t// Create the SharedPasswordData struct and add it to the recipient's shared passwords\\r\\n\\t\\tSharedPasswordData memory newPassword = SharedPasswordData(\\r\\n\\t\\t\\tname,\\r\\n\\t\\t\\tencryptedDataHash,\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\trecipient\\r\\n\\t\\t);\\r\\n\\t\\tsharedPasswords[msg.sender][recipient].push(newPassword);\\r\\n\\r\\n\\t\\tsentPasswordCount[msg.sender]++;\\r\\n\\t\\treceivedPasswordCount[recipient]++;\\r\\n\\r\\n\\t\\t// Check if the sender is already in the recipient's senders list\\r\\n\\t\\tbool senderExists = false;\\r\\n\\t\\tfor (uint256 i = 0; i < senders[recipient].length; i++) {\\r\\n\\t\\t\\tif (senders[recipient][i] == msg.sender) {\\r\\n\\t\\t\\t\\tsenderExists = true;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tif (!senderExists) {\\r\\n\\t\\t\\tsenders[recipient].push(msg.sender);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Check if the recipient is already in the sender's recipients list\\r\\n\\t\\tbool recipientExists = false;\\r\\n\\t\\tfor (uint256 i = 0; i < recipients[msg.sender].length; i++) {\\r\\n\\t\\t\\tif (recipients[msg.sender][i] == recipient) {\\r\\n\\t\\t\\t\\trecipientExists = true;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tif (!recipientExists) {\\r\\n\\t\\t\\trecipients[msg.sender].push(recipient);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Emit the event\\r\\n\\t\\temit PasswordShared(msg.sender, recipient);\\r\\n\\t}\\r\\n\\r\\n\\t// Function to revoke a shared password\\r\\n\\tfunction revokeSharedPassword(\\r\\n\\t\\taddress recipient,\\r\\n\\t\\tstring memory name,\\r\\n\\t\\tstring memory encryptedDataHash\\r\\n\\t) external onlyRegistered {\\r\\n\\t\\t// Find the password and remove it from the recipient's shared passwords\\r\\n\\t\\tSharedPasswordData[] storage recipientPasswords = sharedPasswords[\\r\\n\\t\\t\\tmsg.sender\\r\\n\\t\\t][recipient];\\r\\n\\t\\tbool anyRemoved;\\r\\n\\t\\tfor (uint256 i = 0; i < recipientPasswords.length; i++) {\\r\\n\\t\\t\\tif (\\r\\n\\t\\t\\t\\tkeccak256(abi.encodePacked(recipientPasswords[i].name)) ==\\r\\n\\t\\t\\t\\tkeccak256(abi.encodePacked(name)) &&\\r\\n\\t\\t\\t\\tkeccak256(\\r\\n\\t\\t\\t\\t\\tabi.encodePacked(recipientPasswords[i].encryptedDataHash)\\r\\n\\t\\t\\t\\t) ==\\r\\n\\t\\t\\t\\tkeccak256(abi.encodePacked(encryptedDataHash))\\r\\n\\t\\t\\t) {\\r\\n\\t\\t\\t\\t// Remove the password by swapping it with the last element and then popping it\\r\\n\\t\\t\\t\\trecipientPasswords[i] = recipientPasswords[\\r\\n\\t\\t\\t\\t\\trecipientPasswords.length - 1\\r\\n\\t\\t\\t\\t];\\r\\n\\t\\t\\t\\trecipientPasswords.pop();\\r\\n\\t\\t\\t\\tsentPasswordCount[msg.sender]--;\\r\\n\\t\\t\\t\\treceivedPasswordCount[recipient]--;\\r\\n\\r\\n\\t\\t\\t\\t// If no passwords are left, update the senders and recipients mappings\\r\\n\\t\\t\\t\\tif (recipientPasswords.length == 0) {\\r\\n\\t\\t\\t\\t\\t// Remove sender from recipient's senders list\\r\\n\\t\\t\\t\\t\\tremoveAddressFromList(senders[recipient], msg.sender);\\r\\n\\t\\t\\t\\t\\t// Remove recipient from sender's recipients list\\r\\n\\t\\t\\t\\t\\tremoveAddressFromList(recipients[msg.sender], recipient);\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tanyRemoved = true;\\r\\n\\r\\n\\t\\t\\t\\t// Emit the event\\r\\n\\t\\t\\t\\temit SharedPasswordRevoked(msg.sender, recipient);\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (!anyRemoved) revert(\\\"No matching password found.\\\");\\r\\n\\t}\\r\\n\\r\\n\\t// Helper function to remove an address from an array\\r\\n\\tfunction removeAddressFromList(\\r\\n\\t\\taddress[] storage list,\\r\\n\\t\\taddress addrToRemove\\r\\n\\t) internal {\\r\\n\\t\\tfor (uint256 i = 0; i < list.length; i++) {\\r\\n\\t\\t\\tif (list[i] == addrToRemove) {\\r\\n\\t\\t\\t\\tlist[i] = list[list.length - 1];\\r\\n\\t\\t\\t\\tlist.pop();\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Function to retrieve shared passwords that have been sent to a user\\r\\n\\tfunction getSharedPasswordsSent(\\r\\n\\t\\taddress recipient\\r\\n\\t) external view onlyRegistered returns (SharedPasswordData[] memory) {\\r\\n\\t\\treturn sharedPasswords[msg.sender][recipient];\\r\\n\\t}\\r\\n\\r\\n\\t// Function to retrieve shared passwords that have been received from a user\\r\\n\\tfunction getSharedPasswordsReceived(\\r\\n\\t\\taddress sender\\r\\n\\t) external view onlyRegistered returns (SharedPasswordData[] memory) {\\r\\n\\t\\treturn sharedPasswords[sender][msg.sender];\\r\\n\\t}\\r\\n\\r\\n\\t// Function to retrieve all shared passwords sent by the caller\\r\\n\\tfunction getAllSharedPasswordsSent()\\r\\n\\t\\texternal\\r\\n\\t\\tview\\r\\n\\t\\tonlyRegistered\\r\\n\\t\\treturns (SharedPasswordData[] memory)\\r\\n\\t{\\r\\n\\t\\t// Determine the total number of passwords sent\\r\\n\\t\\tuint256 totalSentPasswords = sentPasswordCount[msg.sender];\\r\\n\\r\\n\\t\\t// Create an array to store the sent passwords\\r\\n\\t\\tSharedPasswordData[] memory allSentPasswords = new SharedPasswordData[](\\r\\n\\t\\t\\ttotalSentPasswords\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tuint256 index = 0;\\r\\n\\t\\taddress[] memory recipientsList = recipients[msg.sender];\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < recipientsList.length; i++) {\\r\\n\\t\\t\\taddress recipient = recipientsList[i];\\r\\n\\t\\t\\tSharedPasswordData[] memory sentPasswords = sharedPasswords[\\r\\n\\t\\t\\t\\tmsg.sender\\r\\n\\t\\t\\t][recipient];\\r\\n\\r\\n\\t\\t\\tfor (uint256 j = 0; j < sentPasswords.length; j++) {\\r\\n\\t\\t\\t\\tallSentPasswords[index] = sentPasswords[j];\\r\\n\\t\\t\\t\\tindex++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn allSentPasswords;\\r\\n\\t}\\r\\n\\r\\n\\t// Function to retrieve all shared passwords received by the caller\\r\\n\\tfunction getAllSharedPasswordsReceived()\\r\\n\\t\\texternal\\r\\n\\t\\tview\\r\\n\\t\\tonlyRegistered\\r\\n\\t\\treturns (SharedPasswordData[] memory)\\r\\n\\t{\\r\\n\\t\\t// Determine the total number of passwords received\\r\\n\\t\\tuint256 totalReceivedPasswords = receivedPasswordCount[msg.sender];\\r\\n\\r\\n\\t\\t// Create an array to store the received passwords\\r\\n\\t\\tSharedPasswordData[]\\r\\n\\t\\t\\tmemory allReceivedPasswords = new SharedPasswordData[](\\r\\n\\t\\t\\t\\ttotalReceivedPasswords\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\tuint256 index = 0;\\r\\n\\t\\taddress[] memory sendersList = senders[msg.sender];\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < sendersList.length; i++) {\\r\\n\\t\\t\\taddress sender = sendersList[i];\\r\\n\\t\\t\\tSharedPasswordData[] memory receivedPasswords = sharedPasswords[\\r\\n\\t\\t\\t\\tsender\\r\\n\\t\\t\\t][msg.sender];\\r\\n\\r\\n\\t\\t\\tfor (uint256 j = 0; j < receivedPasswords.length; j++) {\\r\\n\\t\\t\\t\\tallReceivedPasswords[index] = receivedPasswords[j];\\r\\n\\t\\t\\t\\tindex++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn allReceivedPasswords;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x62ec440864f6606f12b6c5c216f94757ea12befe64b7213ab9d14724bb930aa4\",\"license\":\"MIT\"},\"contracts/UserPasswordManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract UserPasswordManager {\\r\\n\\taddress public owner;\\r\\n\\r\\n\\tstruct PasswordData {\\r\\n\\t\\tstring name;\\r\\n\\t\\tstring encryptedDataHash;\\r\\n\\t}\\r\\n\\r\\n\\tmapping(address => bool) internal isRegistered;\\r\\n\\tmapping(address => string) internal userPublicKeys;\\r\\n\\tmapping(address => PasswordData[]) internal userPasswords;\\r\\n\\r\\n\\tevent UserRegistered(address indexed user);\\r\\n\\tevent PasswordStored(address indexed user);\\r\\n\\tevent PasswordDetailsUpdated(address indexed user);\\r\\n\\tevent PasswordDeleted(address indexed user);\\r\\n\\r\\n\\tconstructor(address _owner) {\\r\\n\\t\\towner = _owner == address(0) ? msg.sender : _owner; // Default to deployer if _owner is address(0)\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(msg.sender == owner, \\\"Not the contract owner.\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyRegistered() {\\r\\n\\t\\trequire(isRegistered[msg.sender], \\\"User is not registered.\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isUserRegistered(address user) public view returns (bool) {\\r\\n\\t\\treturn isRegistered[user];\\r\\n\\t}\\r\\n\\r\\n\\t// Virtual function to allow overriding in child contracts\\r\\n\\tfunction registerUser(string memory publicKey) external payable virtual {\\r\\n\\t\\trequire(!isRegistered[msg.sender], \\\"User already registered.\\\");\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tmsg.value >= 0.01 ether,\\r\\n\\t\\t\\t\\\"Insufficient registration fee. At least 0.01 ETH required.\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t// Call the original registerUser logic from the parent contract\\r\\n\\t\\tisRegistered[msg.sender] = true;\\r\\n\\t\\tuserPublicKeys[msg.sender] = publicKey;\\r\\n\\r\\n\\t\\temit UserRegistered(msg.sender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction storePassword(\\r\\n\\t\\tstring memory name,\\r\\n\\t\\tstring memory encryptedDataHash\\r\\n\\t) external onlyRegistered {\\r\\n\\t\\tPasswordData memory newPasswordData = PasswordData({\\r\\n\\t\\t\\tname: name,\\r\\n\\t\\t\\tencryptedDataHash: encryptedDataHash\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tuserPasswords[msg.sender].push(newPasswordData);\\r\\n\\r\\n\\t\\temit PasswordStored(msg.sender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction updatePasswordDetails(\\r\\n\\t\\tuint index,\\r\\n\\t\\tstring memory name,\\r\\n\\t\\tstring memory encryptedDataHash\\r\\n\\t) external onlyRegistered {\\r\\n\\t\\trequire(index < userPasswords[msg.sender].length, \\\"Invalid index.\\\");\\r\\n\\r\\n\\t\\tPasswordData storage passwordData = userPasswords[msg.sender][index];\\r\\n\\t\\tpasswordData.name = name;\\r\\n\\t\\tpasswordData.encryptedDataHash = encryptedDataHash;\\r\\n\\r\\n\\t\\temit PasswordDetailsUpdated(msg.sender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction deletePassword(uint index) external onlyRegistered {\\r\\n\\t\\trequire(index < userPasswords[msg.sender].length, \\\"Invalid index.\\\");\\r\\n\\r\\n\\t\\t// Move the last element into the place to delete\\r\\n\\t\\tuserPasswords[msg.sender][index] = userPasswords[msg.sender][\\r\\n\\t\\t\\tuserPasswords[msg.sender].length - 1\\r\\n\\t\\t];\\r\\n\\t\\tuserPasswords[msg.sender].pop();\\r\\n\\r\\n\\t\\temit PasswordDeleted(msg.sender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPasswords()\\r\\n\\t\\texternal\\r\\n\\t\\tview\\r\\n\\t\\tonlyRegistered\\r\\n\\t\\treturns (PasswordData[] memory)\\r\\n\\t{\\r\\n\\t\\treturn userPasswords[msg.sender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserPublicKey(\\r\\n\\t\\taddress user\\r\\n\\t) external view onlyRegistered returns (string memory) {\\r\\n\\t\\treturn userPublicKeys[user];\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() external onlyOwner {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\taddress(this).balance > 0,\\r\\n\\t\\t\\t\\\"No funds available for withdrawal.\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t(bool success, ) = owner.call{ value: address(this).balance }(\\\"\\\");\\r\\n\\t\\trequire(success, \\\"Withdrawal failed.\\\");\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xbfefc67e360f4c8f05a8d3fe7785bdbc67d98e50ebbf5c45d1610ce0668fb944\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200273b3803806200273b833981016040819052620000349162000077565b806001600160a01b038116156200004c57806200004e565b335b600080546001600160a01b0319166001600160a01b039290921691909117905550620000a99050565b6000602082840312156200008a57600080fd5b81516001600160a01b0381168114620000a257600080fd5b9392505050565b61268280620000b96000396000f3fe6080604052600436106100e85760003560e01c806349f8880e1161008a5780638da5cb5b116100595780638da5cb5b1461027a578063ae8842d7146102b2578063c3b3863c146102d2578063d7c1a454146102f257600080fd5b806349f8880e14610205578063654b63a914610227578063704f1b941461024757806373e7c61c1461025a57600080fd5b80631eaa2aef116100c65780631eaa2aef1461018e57806329ad56ba146101bb5780633ccfd60b146101d05780633eedffd9146101e557600080fd5b80630882efb5146100ed57806311231fe01461010f578063163f752214610145575b600080fd5b3480156100f957600080fd5b5061010d610108366004611fc1565b610307565b005b34801561011b57600080fd5b5061012f61012a366004612045565b61040d565b60405161013c91906120b7565b60405180910390f35b34801561015157600080fd5b5061017e610160366004612045565b6001600160a01b031660009081526001602052604090205460ff1690565b604051901515815260200161013c565b34801561019a57600080fd5b506101ae6101a9366004612045565b6104e8565b60405161013c91906120ca565b3480156101c757600080fd5b506101ae6106dc565b3480156101dc57600080fd5b5061010d610a4e565b3480156101f157600080fd5b5061010d610200366004612171565b610b9e565b34801561021157600080fd5b5061021a610c5e565b60405161013c91906121d5565b34801561023357600080fd5b5061010d61024236600461224c565b610e19565b61010d610255366004612287565b6111ce565b34801561026657600080fd5b506101ae610275366004612045565b611308565b34801561028657600080fd5b5060005461029a906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b3480156102be57600080fd5b5061010d6102cd36600461224c565b6114f1565b3480156102de57600080fd5b5061010d6102ed3660046122c4565b611880565b3480156102fe57600080fd5b506101ae611a20565b3360009081526001602052604090205460ff1661033f5760405162461bcd60e51b8152600401610336906122dd565b60405180910390fd5b33600090815260036020526040902054831061038e5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b6044820152606401610336565b3360009081526003602052604081208054859081106103af576103af612314565b600091825260209091206002909102019050806103cc84826123b2565b50600181016103db83826123b2565b5060405133907fa01e330bbf8bee10675c961504d3c31481bc2401f5e8ea7139c7c6c86e941c2090600090a250505050565b3360009081526001602052604090205460609060ff1661043f5760405162461bcd60e51b8152600401610336906122dd565b6001600160a01b038216600090815260026020526040902080546104629061232a565b80601f016020809104026020016040519081016040528092919081815260200182805461048e9061232a565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b505050505090505b919050565b3360009081526001602052604090205460609060ff1661051a5760405162461bcd60e51b8152600401610336906122dd565b6001600160a01b0382166000908152600860209081526040808320338452825280832080548251818502810185019093528083529193909284015b828210156106d157838290600052602060002090600402016040518060800160405290816000820180546105889061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b49061232a565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b5050505050815260200160018201805461061a9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546106469061232a565b80156106935780601f1061066857610100808354040283529160200191610693565b820191906000526020600020905b81548152906001019060200180831161067657829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101610555565b505050509050919050565b3360009081526001602052604090205460609060ff1661070e5760405162461bcd60e51b8152600401610336906122dd565b33600090815260066020526040812054908167ffffffffffffffff81111561073857610738611f1e565b60405190808252806020026020018201604052801561077157816020015b61075e611e96565b8152602001906001900390816107565790505b5033600090815260046020908152604080832080548251818502810185019093528083529495509293849391928301828280156107d757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107b9575b5050505050905060005b8151811015610a445760008282815181106107fe576107fe612314565b6020908102919091018101513360009081526008835260408082206001600160a01b0384168352845280822080548251818702810187019093528083529395509193909290849084015b828210156109c4578382906000526020600020906004020160405180608001604052908160008201805461087b9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546108a79061232a565b80156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050815260200160018201805461090d9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546109399061232a565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101610848565b50505050905060005b8151811015610a2e578181815181106109e8576109e8612314565b6020026020010151878781518110610a0257610a02612314565b60200260200101819052508580610a1890612488565b9650508080610a2690612488565b9150506109cd565b5050508080610a3c90612488565b9150506107e1565b5091935050505090565b6000546001600160a01b03163314610aa85760405162461bcd60e51b815260206004820152601760248201527f4e6f742074686520636f6e7472616374206f776e65722e0000000000000000006044820152606401610336565b60004711610b035760405162461bcd60e51b815260206004820152602260248201527f4e6f2066756e647320617661696c61626c6520666f7220776974686472617761604482015261361760f11b6064820152608401610336565b600080546040516001600160a01b039091169047908381818185875af1925050503d8060008114610b50576040519150601f19603f3d011682016040523d82523d6000602084013e610b55565b606091505b5050905080610b9b5760405162461bcd60e51b81526020600482015260126024820152712bb4ba34323930bbb0b6103330b4b632b21760711b6044820152606401610336565b50565b3360009081526001602052604090205460ff16610bcd5760405162461bcd60e51b8152600401610336906122dd565b604080518082018252838152602080820184905233600090815260038252928320805460018101825590845292208151919283926002909102909101908190610c1690826123b2565b5060208201516001820190610c2b90826123b2565b50506040513391507fc204fec4fed12d89a34e59340b9f4cc8a9e830daf5d856796d9f5d10ca7a278f90600090a2505050565b3360009081526001602052604090205460609060ff16610c905760405162461bcd60e51b8152600401610336906122dd565b33600090815260036020908152604080832080548251818502810185019093528083529193909284015b82821015610e105783829060005260206000209060020201604051806040016040529081600082018054610ced9061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d199061232a565b8015610d665780601f10610d3b57610100808354040283529160200191610d66565b820191906000526020600020905b815481529060010190602001808311610d4957829003601f168201915b50505050508152602001600182018054610d7f9061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054610dab9061232a565b8015610df85780601f10610dcd57610100808354040283529160200191610df8565b820191906000526020600020905b815481529060010190602001808311610ddb57829003601f168201915b50505050508152505081526020019060010190610cba565b50505050905090565b3360009081526001602052604090205460ff16610e485760405162461bcd60e51b8152600401610336906122dd565b6001600160a01b03831660009081526001602052604090205460ff16610eb05760405162461bcd60e51b815260206004820152601c60248201527f526563697069656e74206973206e6f7420726567697374657265642e000000006044820152606401610336565b336001600160a01b03841603610f085760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f7420736861726520776974682073616d6520616464726573732e006044820152606401610336565b604080516080810182528381526020808201849052338284018190526001600160a01b038716606084018190526000918252600883528482209082528252928320805460018101825590845292208151919283926004909102909101908190610f7190826123b2565b5060208201516001820190610f8690826123b2565b506040828101516002830180546001600160a01b03199081166001600160a01b0393841617909155606090940151600390930180549094169216919091179091553360009081526006602052908120805491610fe183612488565b90915550506001600160a01b038416600090815260076020526040812080549161100a83612488565b91905055506000805b6001600160a01b038616600090815260056020526040902054811015611095576001600160a01b038616600090815260056020526040902080543391908390811061106057611060612314565b6000918252602090912001546001600160a01b0316036110835760019150611095565b8061108d81612488565b915050611013565b50806110d4576001600160a01b03851660009081526005602090815260408220805460018101825590835291200180546001600160a01b031916331790555b6000805b336000908152600460205260409020548110156111515733600090815260046020526040902080546001600160a01b03891691908390811061111c5761111c612314565b6000918252602090912001546001600160a01b03160361113f5760019150611151565b8061114981612488565b9150506110d8565b5080611190573360009081526004602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b0388161790555b6040516001600160a01b0387169033907f32207d3f138c0b0291ed3a6808e0a254c01d8a0e4493414fb7f27cc3d3dabad590600090a3505050505050565b3360009081526001602052604090205460ff161561122e5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e00000000000000006044820152606401610336565b662386f26fc100003410156112ab5760405162461bcd60e51b815260206004820152603a60248201527f496e73756666696369656e7420726567697374726174696f6e206665652e204160448201527f74206c6561737420302e3031204554482072657175697265642e0000000000006064820152608401610336565b336000908152600160208181526040808420805460ff19169093179092556002905290206112d982826123b2565b5060405133907f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b990600090a250565b3360009081526001602052604090205460609060ff1661133a5760405162461bcd60e51b8152600401610336906122dd565b3360009081526008602090815260408083206001600160a01b0386168452825280832080548251818502810185019093528083529193909284015b828210156106d157838290600052602060002090600402016040518060800160405290816000820180546113a89061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546113d49061232a565b80156114215780601f106113f657610100808354040283529160200191611421565b820191906000526020600020905b81548152906001019060200180831161140457829003601f168201915b5050505050815260200160018201805461143a9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546114669061232a565b80156114b35780601f10611488576101008083540402835291602001916114b3565b820191906000526020600020905b81548152906001019060200180831161149657829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101611375565b3360009081526001602052604090205460ff166115205760405162461bcd60e51b8152600401610336906122dd565b3360009081526008602090815260408083206001600160a01b0387168452909152812090805b825481101561182b578460405160200161156091906124a1565b6040516020818303038152906040528051906020012083828154811061158857611588612314565b90600052602060002090600402016000016040516020016115a991906124bd565b604051602081830303815290604052805190602001201480156116395750836040516020016115d891906124a1565b6040516020818303038152906040528051906020012083828154811061160057611600612314565b906000526020600020906004020160010160405160200161162191906124bd565b60405160208183030381529060405280519060200120145b15611819578254839061164e90600190612533565b8154811061165e5761165e612314565b906000526020600020906004020183828154811061167e5761167e612314565b6000918252602090912060049091020180611699838261254c565b506001818101906116ac9084018261254c565b5060028281015490820180546001600160a01b03199081166001600160a01b0393841617909155600393840154939092018054909216921691909117905582548390806116fb576116fb61261f565b6000828152602081206000199092019160048302019061171b8282611ed0565b611729600183016000611ed0565b506002810180546001600160a01b0319908116909155600390910180549091169055905533600090815260066020526040812080549161176883612635565b90915550506001600160a01b038616600090815260076020526040812080549161179183612635565b909155505082546000036117da576001600160a01b03861660009081526005602052604090206117c19033611d88565b3360009081526004602052604090206117da9087611d88565b604051600192506001600160a01b0387169033907fd80e9ed087700b9b15502a5b4769c4c1de5d88a54d22cbec9784552f5eb84b2190600090a361182b565b8061182381612488565b915050611546565b50806118795760405162461bcd60e51b815260206004820152601b60248201527f4e6f206d61746368696e672070617373776f726420666f756e642e00000000006044820152606401610336565b5050505050565b3360009081526001602052604090205460ff166118af5760405162461bcd60e51b8152600401610336906122dd565b3360009081526003602052604090205481106118fe5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b6044820152606401610336565b336000908152600360205260409020805461191b90600190612533565b8154811061192b5761192b612314565b906000526020600020906002020160036000336001600160a01b03166001600160a01b03168152602001908152602001600020828154811061196f5761196f612314565b600091825260209091206002909102018061198a838261254c565b5060018181019061199d9084018261254c565b50503360009081526003602052604090208054909150806119c0576119c061261f565b600082815260208120600019909201916002830201906119e08282611ed0565b6119ee600183016000611ed0565b5050905560405133907fc9136657b3a49b964bfc5c2a296352dadb93eb43d997f910bfeda105bd5a640590600090a250565b3360009081526001602052604090205460609060ff16611a525760405162461bcd60e51b8152600401610336906122dd565b33600090815260076020526040812054908167ffffffffffffffff811115611a7c57611a7c611f1e565b604051908082528060200260200182016040528015611ab557816020015b611aa2611e96565b815260200190600190039081611a9a5790505b503360009081526005602090815260408083208054825181850281018501909352808352949550929384939192830182828015611b1b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611afd575b5050505050905060005b8151811015610a44576000828281518110611b4257611b42612314565b6020908102919091018101516001600160a01b0381166000908152600883526040808220338352845280822080548251818702810187019093528083529395509193909290849084015b82821015611d085783829060005260206000209060040201604051806080016040529081600082018054611bbf9061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054611beb9061232a565b8015611c385780601f10611c0d57610100808354040283529160200191611c38565b820191906000526020600020905b815481529060010190602001808311611c1b57829003601f168201915b50505050508152602001600182018054611c519061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7d9061232a565b8015611cca5780601f10611c9f57610100808354040283529160200191611cca565b820191906000526020600020905b815481529060010190602001808311611cad57829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101611b8c565b50505050905060005b8151811015611d7257818181518110611d2c57611d2c612314565b6020026020010151878781518110611d4657611d46612314565b60200260200101819052508580611d5c90612488565b9650508080611d6a90612488565b915050611d11565b5050508080611d8090612488565b915050611b25565b60005b8254811015611e9157816001600160a01b0316838281548110611db057611db0612314565b6000918252602090912001546001600160a01b031603611e7f5782548390611dda90600190612533565b81548110611dea57611dea612314565b9060005260206000200160009054906101000a90046001600160a01b0316838281548110611e1a57611e1a612314565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480611e5857611e5861261f565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b80611e8981612488565b915050611d8b565b505050565b6040518060800160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b508054611edc9061232a565b6000825580601f10611eec575050565b601f016020900490600052602060002090810190610b9b91905b80821115611f1a5760008155600101611f06565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611f4557600080fd5b813567ffffffffffffffff80821115611f6057611f60611f1e565b604051601f8301601f19908116603f01168101908282118183101715611f8857611f88611f1e565b81604052838152866020858801011115611fa157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611fd657600080fd5b83359250602084013567ffffffffffffffff80821115611ff557600080fd5b61200187838801611f34565b9350604086013591508082111561201757600080fd5b5061202486828701611f34565b9150509250925092565b80356001600160a01b03811681146104e357600080fd5b60006020828403121561205757600080fd5b6120608261202e565b9392505050565b60005b8381101561208257818101518382015260200161206a565b50506000910152565b600081518084526120a3816020860160208601612067565b601f01601f19169290920160200192915050565b602081526000612060602083018461208b565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561216357603f198984030185528151608081518186526121178287018261208b565b915050888201518582038a87015261212f828261208b565b838a01516001600160a01b03908116888c0152606094850151169390960192909252505093860193908601906001016120f1565b509098975050505050505050565b6000806040838503121561218457600080fd5b823567ffffffffffffffff8082111561219c57600080fd5b6121a886838701611f34565b935060208501359150808211156121be57600080fd5b506121cb85828601611f34565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561216357888303603f19018552815180518785526122208886018261208b565b91890151858303868b0152919050612238818361208b565b9689019694505050908601906001016121fc565b60008060006060848603121561226157600080fd5b61226a8461202e565b9250602084013567ffffffffffffffff80821115611ff557600080fd5b60006020828403121561229957600080fd5b813567ffffffffffffffff8111156122b057600080fd5b6122bc84828501611f34565b949350505050565b6000602082840312156122d657600080fd5b5035919050565b60208082526017908201527f55736572206973206e6f7420726567697374657265642e000000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061233e57607f821691505b60208210810361235e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611e9157600081815260208120601f850160051c8101602086101561238b5750805b601f850160051c820191505b818110156123aa57828155600101612397565b505050505050565b815167ffffffffffffffff8111156123cc576123cc611f1e565b6123e0816123da845461232a565b84612364565b602080601f83116001811461241557600084156123fd5750858301515b600019600386901b1c1916600185901b1785556123aa565b600085815260208120601f198616915b8281101561244457888601518255948401946001909101908401612425565b50858210156124625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161249a5761249a612472565b5060010190565b600082516124b3818460208701612067565b9190910192915050565b60008083546124cb8161232a565b600182811680156124e357600181146124f857612527565b60ff1984168752821515830287019450612527565b8760005260208060002060005b8581101561251e5781548a820152908401908201612505565b50505082870194505b50929695505050505050565b8181038181111561254657612546612472565b92915050565b818103612557575050565b612561825461232a565b67ffffffffffffffff81111561257957612579611f1e565b612587816123da845461232a565b6000601f8211600181146125bb57600083156125a35750848201545b600019600385901b1c1916600184901b178455611879565b600085815260209020601f19841690600086815260209020845b838110156125f557828601548255600195860195909101906020016125d5565b50858310156124625793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b60008161264457612644612472565b50600019019056fea26469706673582212201ed1e27781dc80e316cac6be168bd717373bf1e12910afda7bf2d9845f782d2464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c806349f8880e1161008a5780638da5cb5b116100595780638da5cb5b1461027a578063ae8842d7146102b2578063c3b3863c146102d2578063d7c1a454146102f257600080fd5b806349f8880e14610205578063654b63a914610227578063704f1b941461024757806373e7c61c1461025a57600080fd5b80631eaa2aef116100c65780631eaa2aef1461018e57806329ad56ba146101bb5780633ccfd60b146101d05780633eedffd9146101e557600080fd5b80630882efb5146100ed57806311231fe01461010f578063163f752214610145575b600080fd5b3480156100f957600080fd5b5061010d610108366004611fc1565b610307565b005b34801561011b57600080fd5b5061012f61012a366004612045565b61040d565b60405161013c91906120b7565b60405180910390f35b34801561015157600080fd5b5061017e610160366004612045565b6001600160a01b031660009081526001602052604090205460ff1690565b604051901515815260200161013c565b34801561019a57600080fd5b506101ae6101a9366004612045565b6104e8565b60405161013c91906120ca565b3480156101c757600080fd5b506101ae6106dc565b3480156101dc57600080fd5b5061010d610a4e565b3480156101f157600080fd5b5061010d610200366004612171565b610b9e565b34801561021157600080fd5b5061021a610c5e565b60405161013c91906121d5565b34801561023357600080fd5b5061010d61024236600461224c565b610e19565b61010d610255366004612287565b6111ce565b34801561026657600080fd5b506101ae610275366004612045565b611308565b34801561028657600080fd5b5060005461029a906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b3480156102be57600080fd5b5061010d6102cd36600461224c565b6114f1565b3480156102de57600080fd5b5061010d6102ed3660046122c4565b611880565b3480156102fe57600080fd5b506101ae611a20565b3360009081526001602052604090205460ff1661033f5760405162461bcd60e51b8152600401610336906122dd565b60405180910390fd5b33600090815260036020526040902054831061038e5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b6044820152606401610336565b3360009081526003602052604081208054859081106103af576103af612314565b600091825260209091206002909102019050806103cc84826123b2565b50600181016103db83826123b2565b5060405133907fa01e330bbf8bee10675c961504d3c31481bc2401f5e8ea7139c7c6c86e941c2090600090a250505050565b3360009081526001602052604090205460609060ff1661043f5760405162461bcd60e51b8152600401610336906122dd565b6001600160a01b038216600090815260026020526040902080546104629061232a565b80601f016020809104026020016040519081016040528092919081815260200182805461048e9061232a565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b505050505090505b919050565b3360009081526001602052604090205460609060ff1661051a5760405162461bcd60e51b8152600401610336906122dd565b6001600160a01b0382166000908152600860209081526040808320338452825280832080548251818502810185019093528083529193909284015b828210156106d157838290600052602060002090600402016040518060800160405290816000820180546105889061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b49061232a565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b5050505050815260200160018201805461061a9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546106469061232a565b80156106935780601f1061066857610100808354040283529160200191610693565b820191906000526020600020905b81548152906001019060200180831161067657829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101610555565b505050509050919050565b3360009081526001602052604090205460609060ff1661070e5760405162461bcd60e51b8152600401610336906122dd565b33600090815260066020526040812054908167ffffffffffffffff81111561073857610738611f1e565b60405190808252806020026020018201604052801561077157816020015b61075e611e96565b8152602001906001900390816107565790505b5033600090815260046020908152604080832080548251818502810185019093528083529495509293849391928301828280156107d757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107b9575b5050505050905060005b8151811015610a445760008282815181106107fe576107fe612314565b6020908102919091018101513360009081526008835260408082206001600160a01b0384168352845280822080548251818702810187019093528083529395509193909290849084015b828210156109c4578382906000526020600020906004020160405180608001604052908160008201805461087b9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546108a79061232a565b80156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050815260200160018201805461090d9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546109399061232a565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101610848565b50505050905060005b8151811015610a2e578181815181106109e8576109e8612314565b6020026020010151878781518110610a0257610a02612314565b60200260200101819052508580610a1890612488565b9650508080610a2690612488565b9150506109cd565b5050508080610a3c90612488565b9150506107e1565b5091935050505090565b6000546001600160a01b03163314610aa85760405162461bcd60e51b815260206004820152601760248201527f4e6f742074686520636f6e7472616374206f776e65722e0000000000000000006044820152606401610336565b60004711610b035760405162461bcd60e51b815260206004820152602260248201527f4e6f2066756e647320617661696c61626c6520666f7220776974686472617761604482015261361760f11b6064820152608401610336565b600080546040516001600160a01b039091169047908381818185875af1925050503d8060008114610b50576040519150601f19603f3d011682016040523d82523d6000602084013e610b55565b606091505b5050905080610b9b5760405162461bcd60e51b81526020600482015260126024820152712bb4ba34323930bbb0b6103330b4b632b21760711b6044820152606401610336565b50565b3360009081526001602052604090205460ff16610bcd5760405162461bcd60e51b8152600401610336906122dd565b604080518082018252838152602080820184905233600090815260038252928320805460018101825590845292208151919283926002909102909101908190610c1690826123b2565b5060208201516001820190610c2b90826123b2565b50506040513391507fc204fec4fed12d89a34e59340b9f4cc8a9e830daf5d856796d9f5d10ca7a278f90600090a2505050565b3360009081526001602052604090205460609060ff16610c905760405162461bcd60e51b8152600401610336906122dd565b33600090815260036020908152604080832080548251818502810185019093528083529193909284015b82821015610e105783829060005260206000209060020201604051806040016040529081600082018054610ced9061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d199061232a565b8015610d665780601f10610d3b57610100808354040283529160200191610d66565b820191906000526020600020905b815481529060010190602001808311610d4957829003601f168201915b50505050508152602001600182018054610d7f9061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054610dab9061232a565b8015610df85780601f10610dcd57610100808354040283529160200191610df8565b820191906000526020600020905b815481529060010190602001808311610ddb57829003601f168201915b50505050508152505081526020019060010190610cba565b50505050905090565b3360009081526001602052604090205460ff16610e485760405162461bcd60e51b8152600401610336906122dd565b6001600160a01b03831660009081526001602052604090205460ff16610eb05760405162461bcd60e51b815260206004820152601c60248201527f526563697069656e74206973206e6f7420726567697374657265642e000000006044820152606401610336565b336001600160a01b03841603610f085760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f7420736861726520776974682073616d6520616464726573732e006044820152606401610336565b604080516080810182528381526020808201849052338284018190526001600160a01b038716606084018190526000918252600883528482209082528252928320805460018101825590845292208151919283926004909102909101908190610f7190826123b2565b5060208201516001820190610f8690826123b2565b506040828101516002830180546001600160a01b03199081166001600160a01b0393841617909155606090940151600390930180549094169216919091179091553360009081526006602052908120805491610fe183612488565b90915550506001600160a01b038416600090815260076020526040812080549161100a83612488565b91905055506000805b6001600160a01b038616600090815260056020526040902054811015611095576001600160a01b038616600090815260056020526040902080543391908390811061106057611060612314565b6000918252602090912001546001600160a01b0316036110835760019150611095565b8061108d81612488565b915050611013565b50806110d4576001600160a01b03851660009081526005602090815260408220805460018101825590835291200180546001600160a01b031916331790555b6000805b336000908152600460205260409020548110156111515733600090815260046020526040902080546001600160a01b03891691908390811061111c5761111c612314565b6000918252602090912001546001600160a01b03160361113f5760019150611151565b8061114981612488565b9150506110d8565b5080611190573360009081526004602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b0388161790555b6040516001600160a01b0387169033907f32207d3f138c0b0291ed3a6808e0a254c01d8a0e4493414fb7f27cc3d3dabad590600090a3505050505050565b3360009081526001602052604090205460ff161561122e5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e00000000000000006044820152606401610336565b662386f26fc100003410156112ab5760405162461bcd60e51b815260206004820152603a60248201527f496e73756666696369656e7420726567697374726174696f6e206665652e204160448201527f74206c6561737420302e3031204554482072657175697265642e0000000000006064820152608401610336565b336000908152600160208181526040808420805460ff19169093179092556002905290206112d982826123b2565b5060405133907f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b990600090a250565b3360009081526001602052604090205460609060ff1661133a5760405162461bcd60e51b8152600401610336906122dd565b3360009081526008602090815260408083206001600160a01b0386168452825280832080548251818502810185019093528083529193909284015b828210156106d157838290600052602060002090600402016040518060800160405290816000820180546113a89061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546113d49061232a565b80156114215780601f106113f657610100808354040283529160200191611421565b820191906000526020600020905b81548152906001019060200180831161140457829003601f168201915b5050505050815260200160018201805461143a9061232a565b80601f01602080910402602001604051908101604052809291908181526020018280546114669061232a565b80156114b35780601f10611488576101008083540402835291602001916114b3565b820191906000526020600020905b81548152906001019060200180831161149657829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101611375565b3360009081526001602052604090205460ff166115205760405162461bcd60e51b8152600401610336906122dd565b3360009081526008602090815260408083206001600160a01b0387168452909152812090805b825481101561182b578460405160200161156091906124a1565b6040516020818303038152906040528051906020012083828154811061158857611588612314565b90600052602060002090600402016000016040516020016115a991906124bd565b604051602081830303815290604052805190602001201480156116395750836040516020016115d891906124a1565b6040516020818303038152906040528051906020012083828154811061160057611600612314565b906000526020600020906004020160010160405160200161162191906124bd565b60405160208183030381529060405280519060200120145b15611819578254839061164e90600190612533565b8154811061165e5761165e612314565b906000526020600020906004020183828154811061167e5761167e612314565b6000918252602090912060049091020180611699838261254c565b506001818101906116ac9084018261254c565b5060028281015490820180546001600160a01b03199081166001600160a01b0393841617909155600393840154939092018054909216921691909117905582548390806116fb576116fb61261f565b6000828152602081206000199092019160048302019061171b8282611ed0565b611729600183016000611ed0565b506002810180546001600160a01b0319908116909155600390910180549091169055905533600090815260066020526040812080549161176883612635565b90915550506001600160a01b038616600090815260076020526040812080549161179183612635565b909155505082546000036117da576001600160a01b03861660009081526005602052604090206117c19033611d88565b3360009081526004602052604090206117da9087611d88565b604051600192506001600160a01b0387169033907fd80e9ed087700b9b15502a5b4769c4c1de5d88a54d22cbec9784552f5eb84b2190600090a361182b565b8061182381612488565b915050611546565b50806118795760405162461bcd60e51b815260206004820152601b60248201527f4e6f206d61746368696e672070617373776f726420666f756e642e00000000006044820152606401610336565b5050505050565b3360009081526001602052604090205460ff166118af5760405162461bcd60e51b8152600401610336906122dd565b3360009081526003602052604090205481106118fe5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21034b73232bc1760911b6044820152606401610336565b336000908152600360205260409020805461191b90600190612533565b8154811061192b5761192b612314565b906000526020600020906002020160036000336001600160a01b03166001600160a01b03168152602001908152602001600020828154811061196f5761196f612314565b600091825260209091206002909102018061198a838261254c565b5060018181019061199d9084018261254c565b50503360009081526003602052604090208054909150806119c0576119c061261f565b600082815260208120600019909201916002830201906119e08282611ed0565b6119ee600183016000611ed0565b5050905560405133907fc9136657b3a49b964bfc5c2a296352dadb93eb43d997f910bfeda105bd5a640590600090a250565b3360009081526001602052604090205460609060ff16611a525760405162461bcd60e51b8152600401610336906122dd565b33600090815260076020526040812054908167ffffffffffffffff811115611a7c57611a7c611f1e565b604051908082528060200260200182016040528015611ab557816020015b611aa2611e96565b815260200190600190039081611a9a5790505b503360009081526005602090815260408083208054825181850281018501909352808352949550929384939192830182828015611b1b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611afd575b5050505050905060005b8151811015610a44576000828281518110611b4257611b42612314565b6020908102919091018101516001600160a01b0381166000908152600883526040808220338352845280822080548251818702810187019093528083529395509193909290849084015b82821015611d085783829060005260206000209060040201604051806080016040529081600082018054611bbf9061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054611beb9061232a565b8015611c385780601f10611c0d57610100808354040283529160200191611c38565b820191906000526020600020905b815481529060010190602001808311611c1b57829003601f168201915b50505050508152602001600182018054611c519061232a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7d9061232a565b8015611cca5780601f10611c9f57610100808354040283529160200191611cca565b820191906000526020600020905b815481529060010190602001808311611cad57829003601f168201915b505050918352505060028201546001600160a01b03908116602080840191909152600390930154166040909101529082526001929092019101611b8c565b50505050905060005b8151811015611d7257818181518110611d2c57611d2c612314565b6020026020010151878781518110611d4657611d46612314565b60200260200101819052508580611d5c90612488565b9650508080611d6a90612488565b915050611d11565b5050508080611d8090612488565b915050611b25565b60005b8254811015611e9157816001600160a01b0316838281548110611db057611db0612314565b6000918252602090912001546001600160a01b031603611e7f5782548390611dda90600190612533565b81548110611dea57611dea612314565b9060005260206000200160009054906101000a90046001600160a01b0316838281548110611e1a57611e1a612314565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480611e5857611e5861261f565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b80611e8981612488565b915050611d8b565b505050565b6040518060800160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b508054611edc9061232a565b6000825580601f10611eec575050565b601f016020900490600052602060002090810190610b9b91905b80821115611f1a5760008155600101611f06565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611f4557600080fd5b813567ffffffffffffffff80821115611f6057611f60611f1e565b604051601f8301601f19908116603f01168101908282118183101715611f8857611f88611f1e565b81604052838152866020858801011115611fa157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611fd657600080fd5b83359250602084013567ffffffffffffffff80821115611ff557600080fd5b61200187838801611f34565b9350604086013591508082111561201757600080fd5b5061202486828701611f34565b9150509250925092565b80356001600160a01b03811681146104e357600080fd5b60006020828403121561205757600080fd5b6120608261202e565b9392505050565b60005b8381101561208257818101518382015260200161206a565b50506000910152565b600081518084526120a3816020860160208601612067565b601f01601f19169290920160200192915050565b602081526000612060602083018461208b565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561216357603f198984030185528151608081518186526121178287018261208b565b915050888201518582038a87015261212f828261208b565b838a01516001600160a01b03908116888c0152606094850151169390960192909252505093860193908601906001016120f1565b509098975050505050505050565b6000806040838503121561218457600080fd5b823567ffffffffffffffff8082111561219c57600080fd5b6121a886838701611f34565b935060208501359150808211156121be57600080fd5b506121cb85828601611f34565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561216357888303603f19018552815180518785526122208886018261208b565b91890151858303868b0152919050612238818361208b565b9689019694505050908601906001016121fc565b60008060006060848603121561226157600080fd5b61226a8461202e565b9250602084013567ffffffffffffffff80821115611ff557600080fd5b60006020828403121561229957600080fd5b813567ffffffffffffffff8111156122b057600080fd5b6122bc84828501611f34565b949350505050565b6000602082840312156122d657600080fd5b5035919050565b60208082526017908201527f55736572206973206e6f7420726567697374657265642e000000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061233e57607f821691505b60208210810361235e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611e9157600081815260208120601f850160051c8101602086101561238b5750805b601f850160051c820191505b818110156123aa57828155600101612397565b505050505050565b815167ffffffffffffffff8111156123cc576123cc611f1e565b6123e0816123da845461232a565b84612364565b602080601f83116001811461241557600084156123fd5750858301515b600019600386901b1c1916600185901b1785556123aa565b600085815260208120601f198616915b8281101561244457888601518255948401946001909101908401612425565b50858210156124625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161249a5761249a612472565b5060010190565b600082516124b3818460208701612067565b9190910192915050565b60008083546124cb8161232a565b600182811680156124e357600181146124f857612527565b60ff1984168752821515830287019450612527565b8760005260208060002060005b8581101561251e5781548a820152908401908201612505565b50505082870194505b50929695505050505050565b8181038181111561254657612546612472565b92915050565b818103612557575050565b612561825461232a565b67ffffffffffffffff81111561257957612579611f1e565b612587816123da845461232a565b6000601f8211600181146125bb57600083156125a35750848201545b600019600385901b1c1916600184901b178455611879565b600085815260209020601f19841690600086815260209020845b838110156125f557828601548255600195860195909101906020016125d5565b50858310156124625793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b60008161264457612644612472565b50600019019056fea26469706673582212201ed1e27781dc80e316cac6be168bd717373bf1e12910afda7bf2d9845f782d2464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 649,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 658,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "isRegistered",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 662,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "userPublicKeys",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 668,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "userPasswords",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_struct(PasswordData)654_storage)dyn_storage)"
      },
      {
        "astId": 18,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "recipients",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 23,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "senders",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 27,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "sentPasswordCount",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 31,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "receivedPasswordCount",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 39,
        "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
        "label": "sharedPasswords",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(SharedPasswordData)13_storage)dyn_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(PasswordData)654_storage)dyn_storage": {
        "base": "t_struct(PasswordData)654_storage",
        "encoding": "dynamic_array",
        "label": "struct UserPasswordManager.PasswordData[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(SharedPasswordData)13_storage)dyn_storage": {
        "base": "t_struct(SharedPasswordData)13_storage",
        "encoding": "dynamic_array",
        "label": "struct ShareablePasswordManager.SharedPasswordData[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(PasswordData)654_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UserPasswordManager.PasswordData[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(PasswordData)654_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(SharedPasswordData)13_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ShareablePasswordManager.SharedPasswordData[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(SharedPasswordData)13_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(SharedPasswordData)13_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct ShareablePasswordManager.SharedPasswordData[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_array(t_struct(SharedPasswordData)13_storage)dyn_storage)"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PasswordData)654_storage": {
        "encoding": "inplace",
        "label": "struct UserPasswordManager.PasswordData",
        "members": [
          {
            "astId": 651,
            "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 653,
            "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
            "label": "encryptedDataHash",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(SharedPasswordData)13_storage": {
        "encoding": "inplace",
        "label": "struct ShareablePasswordManager.SharedPasswordData",
        "members": [
          {
            "astId": 6,
            "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
            "label": "encryptedDataHash",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 10,
            "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
            "label": "sharedBy",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 12,
            "contract": "contracts/ShareablePasswordManager.sol:ShareablePasswordManager",
            "label": "sharedWith",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}